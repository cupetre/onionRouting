networks:
  my-mixnet-dev-net:
    driver: bridge

services:

  key-generator:
    build: . # Uses your existing Dockerfile to build the image
    container_name: mixnet-key-generator
    hostname: key-generator
    networks:
      - my-mixnet-dev-net # It needs to be on the network to access others if they needed to
    command: java -jar app.jar GenerateKeys # Custom command to trigger key generation
    volumes:
      # Mount a volume to save keys to your host machine's 'keys' directory.
      # This directory will then be mounted as read-only for other containers.
      - ./keys:/app/keys

  # --- Destination Node (Bob) ---
  destination-bob:
    build: .
    container_name: destination-bob
    hostname: destination-bob
    networks:
      - my-mixnet-dev-net
    command: java -jar app.jar Destination BobDestination
    volumes:
      - ./keys:/app/keys:ro
    depends_on:
          - key-generator
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  destination-rob:
    build: .
    container_name: destination-rob
    hostname: destination-rob
    networks:
      - my-mixnet-dev-net
    command: java -jar app.jar Destination RobDestination
    volumes:
      - ./keys:/app/keys:ro
    depends_on:
      - key-generator
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # --- Mix Node (Alpha) ---
  mixnode-alpha:
    build: .
    container_name: mixnode-alpha
    hostname: mixnode-alpha
    networks:
      - my-mixnet-dev-net
    command: java -jar app.jar Mix MixNode_Alpha
    volumes:
      - ./keys:/app/keys:ro
    depends_on:
      - key-generator
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  mixnode-beta:
    build: .
    container_name: mixnode-beta
    hostname: mixnode-beta
    networks:
      - my-mixnet-dev-net
    command: java -jar app.jar Mix MixNode_Beta
    volumes:
      - ./keys:/app/keys:ro
    depends_on:
      - key-generator
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  mixnode-gamma:
    build: .
    container_name: mixnode-gamma
    hostname: mixnode-gamma
    networks:
      - my-mixnet-dev-net
    command: java -jar app.jar Mix MixNode_Gamma
    volumes:
      - ./keys:/app/keys:ro
    depends_on:
      - key-generator
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # --- Client Node (Alice) ---
  client-a:
    build: .
    container_name: client-a
    hostname: client-a
    networks:
      - my-mixnet-dev-net
    command: java -jar app.jar Client AliceClient
    volumes:
      - ./keys:/app/keys:ro
    depends_on:
      - key-generator
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  client-ma:
    build: .
    container_name: client-ma
    hostname: client-ma
    networks:
      - my-mixnet-dev-net
    command: java -jar app.jar Client MaliceClient
    volumes:
      - ./keys:/app/keys:ro
    depends_on:
      - key-generator
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"